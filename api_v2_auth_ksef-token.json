//
// Endpoint: /api/v2/auth/ksef-token
//
// Generated by OpenAPI_JSON_To_Single_Endpoint app.
// Author: Grzegorz Molenda.
// (C) 2025, All rights reserved.
// Released under MIT License.
//
  "/api/v2/auth/ksef-token" : {
    "post" : {
      "tags" : [
        "Uzyskiwanie dostępu"
      ],
      "summary" : "Uwierzytelnienie z wykorzystaniem tokena KSeF",
      "description" : "Rozpoczyna operację uwierzytelniania z wykorzystaniem wcześniej wygenerowanego tokena KSeF.\n\nToken KSeF wraz z timestampem ze wcześniej wygenerowanego challenge'a (w formacie ```token|timestamp```) powinien zostać zaszyfrowany dedykowanym do tego celu kluczem publicznym.\n- Timestamp powinien zostać przekazany jako **liczba milisekund od 1 stycznia 1970 roku (Unix timestamp)**.\n- Algorytm szyfrowania: **RSA-OAEP (z użyciem SHA-256 jako funkcji skrótu)**.",
      "requestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [
                "challenge",
                "contextIdentifier",
                "encryptedToken"
              ],
              "allOf" : [
                {
                  "$ref" : "#/components/schemas/InitTokenAuthenticationRequest"
                }
              ]
            },
            "example" : {
              "challenge" : "20250625-CR-2FDC223000-C2BFC98A9C-4E",
              "contextIdentifier" : {
                "type" : "Nip",
                "value" : "5265877635"
              },
              "encryptedToken" : "..."
            }
          }
        }
      },
      "responses" : {
        "202" : {
          "description" : "Accepted",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticationInitResponse"
              },
              "example" : {
                "referenceNumber" : "20250514-AU-2DFC46C000-3AC6D5877F-D4",
                "authenticationToken" : {
                  "token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbi10eXBlIjoiT3BlcmF0aW9uVG9rZW4iLCJvcGVyYXRpb24tcmVmZXJlbmNlLW51bWJlciI6IjIwMjUwNTE0LUFVLTJERkM0NkMwMDAtM0FDNkQ1ODc3Ri1ENCIsImV4cCI6MTc0NzIzMTcxOSwiaWF0IjoxNzQ3MjI5MDE5LCJpc3MiOiJrc2VmLWFwaS10aSIsImF1ZCI6ImtzZWYtYXBpLXRpIn0.rtRcV2mR9SiuJwpQaQHsbAXvvVsdNKG4DJsdiJctIeU",
                  "validUntil" : "2025-07-11T12:23:56.0154302+00:00"
                }
              }
            }
          }
        },
        "400" : {
          "description" : "| ExceptionCode | ExceptionDescription | Details |\n|-|-|-|\n| 21405 | Błąd walidacji danych wejściowych. | {treść błędu z walidatora} |",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExceptionResponse"
              }
            }
          },
          "x-summary" : "Bad Request"
        }
      }
    }
  }


  "InitTokenAuthenticationRequest" : {
    "required" : [
      "challenge",
      "contextIdentifier",
      "encryptedToken"
    ],
    "type" : "object",
    "properties" : {
      "challenge" : {
        "type" : "string",
        "description" : "Wygenerowany wcześniej challenge."
      },
      "contextIdentifier" : {
        "required" : [
          "type",
          "value"
        ],
        "allOf" : [
          {
            "$ref" : "#/components/schemas/AuthenticationContextIdentifier"
          }
        ],
        "description" : "Indentyfikator kontekstu do którego następuje uwierzytelnienie."
      },
      "encryptedToken" : {
        "type" : "string",
        "description" : "Zaszyfrowany token wraz z timestampem z challenge'a, w formacie `token|timestamp`."
      },
      "authorizationPolicy" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/AuthorizationPolicy"
          }
        ],
        "description" : "Polityka autoryzacji żądań przy każdym użyciu tokena dostępu.",
        "nullable" : true
      }
    },
    "additionalProperties" : false
  }


  "AuthenticationContextIdentifier" : {
    "required" : [
      "type",
      "value"
    ],
    "type" : "object",
    "properties" : {
      "type" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/AuthenticationContextIdentifierType"
          }
        ],
        "description" : "Typ identyfikatora"
      },
      "value" : {
        "type" : "string",
        "description" : "Wartość identyfikatora"
      }
    },
    "additionalProperties" : false
  }


  "AuthenticationContextIdentifierType" : {
    "enum" : [
      "Nip",
      "InternalId",
      "NipVatUe",
      "PeppolId"
    ],
    "type" : "string"
  }


  "AuthorizationPolicy" : {
    "type" : "object",
    "properties" : {
      "allowedIps" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/AllowedIps"
          }
        ],
        "description" : "Lista dozwolonych adresów IP.",
        "nullable" : true
      }
    },
    "additionalProperties" : false
  }


  "AllowedIps" : {
    "type" : "object",
    "properties" : {
      "ip4Addresses" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Lista adresów IPv4 w notacji dziesiętnej kropkowanej, np. `192.168.0.10`.",
        "nullable" : true
      },
      "ip4Ranges" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Lista adresów IPv4 podana w formie zakresu początek–koniec, oddzielonego pojedynczym myślnikiem, np. `10.0.0.1–10.0.0.254`.",
        "nullable" : true
      },
      "ip4Masks" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Lista adresów IPv4 w notacji CIDR, np. `172.16.0.0/16`.",
        "nullable" : true
      }
    },
    "additionalProperties" : false
  }


  "AuthenticationInitResponse" : {
    "required" : [
      "authenticationToken",
      "referenceNumber"
    ],
    "type" : "object",
    "properties" : {
      "referenceNumber" : {
        "type" : "string",
        "description" : "Numer referencyjny operacji uwierzytelnienia."
      },
      "authenticationToken" : {
        "required" : [
          "token",
          "validUntil"
        ],
        "allOf" : [
          {
            "$ref" : "#/components/schemas/TokenInfo"
          }
        ],
        "description" : "Token operacji uwierzytelnienia."
      }
    },
    "additionalProperties" : false
  }


  "TokenInfo" : {
    "required" : [
      "token",
      "validUntil"
    ],
    "type" : "object",
    "properties" : {
      "token" : {
        "type" : "string",
        "description" : "Token w formacie JWT."
      },
      "validUntil" : {
        "type" : "string",
        "description" : "Data ważności tokena.",
        "format" : "date-time"
      }
    },
    "additionalProperties" : false
  }



//---------------------------------------------------------------------------------------------------
request: "/api/v2/auth/ksef-token": post: application/json
{
  "challenge": "", // required; type: string; description: Wygenerowany wcześniej challenge.
  "contextIdentifier": { // required; type: object; items: #/components/schemas/AuthenticationContextIdentifier; description: Indentyfikator kontekstu do którego następuje uwierzytelnienie.
    "type": "", // required; type: string; items: #/components/schemas/AuthenticationContextIdentifierType; description: Typ identyfikatora
    "value": "" // required; type: string; description: Wartość identyfikatora
  },
  "encryptedToken": "", // required; type: string; description: Zaszyfrowany token wraz z timestampem z challenge'a, w formacie `token|timestamp`.
  "authorizationPolicy": { // type: object; items: #/components/schemas/AuthorizationPolicy; nullable: true; description: Polityka autoryzacji żądań przy każdym użyciu tokena dostępu.
    "allowedIps": { // type: object; items: #/components/schemas/AllowedIps; nullable: true; description: Lista dozwolonych adresów IP.
      "ip4Addresses": [ // type: array; nullable: true; description: Lista adresów IPv4 w notacji dziesiętnej kropkowanej, np. `192.168.0.10`.
      ],
      "ip4Ranges": [ // type: array; nullable: true; description: Lista adresów IPv4 podana w formie zakresu początek–koniec, oddzielonego pojedynczym myślnikiem, np. `10.0.0.1–10.0.0.254`.
      ],
      "ip4Masks": [ // type: array; nullable: true; description: Lista adresów IPv4 w notacji CIDR, np. `172.16.0.0/16`.
      ]
    }
  }
}



response (202): application/json
{
  "referenceNumber": "", // required; type: string; description: Numer referencyjny operacji uwierzytelnienia.
  "authenticationToken": { // required; type: object; items: #/components/schemas/TokenInfo; description: Token operacji uwierzytelnienia.
    "token": "", // required; type: string; description: Token w formacie JWT.
    "validUntil": "" // required; type: string; format: date-time; description: Data ważności tokena.
  }
}
