//
// Endpoint: /api/v2/testdata/permissions/revoke
//
// Generated by OpenAPI_JSON_To_Single_Endpoint app.
// Author: Grzegorz Molenda.
// (C) 2025, All rights reserved.
// Released under MIT License.
//
  "/api/v2/testdata/permissions/revoke" : {
    "post" : {
      "tags" : [
        "Dane testowe"
      ],
      "summary" : "Odebranie uprawnień testowemu podmiotowi/osobie fizycznej",
      "description" : "Odbieranie uprawnień nadanych testowemu podmiotowi lub osobie fizycznej, a także w ich kontekście.",
      "requestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [
                "contextIdentifier",
                "authorizedIdentifier"
              ],
              "allOf" : [
                {
                  "$ref" : "#/components/schemas/TestDataPermissionsRevokeRequest"
                }
              ]
            },
            "example" : {
              "contextIdentifier" : {
                "type" : "Nip",
                "value" : "5265877635"
              },
              "authorizedIdentifier" : {
                "type" : "Nip",
                "value" : "7762811692"
              }
            }
          }
        }
      },
      "responses" : {
        "200" : {
          "description" : "OK"
        },
        "400" : {
          "description" : "| ExceptionCode | ExceptionDescription | Details |\n|-|-|-|\n| 21405 | Błąd walidacji danych wejściowych. | {treść błędu z walidatora} |",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExceptionResponse"
              }
            }
          },
          "x-summary" : "Bad Request"
        }
      }
    }
  }


  "TestDataPermissionsRevokeRequest" : {
    "required" : [
      "authorizedIdentifier",
      "contextIdentifier"
    ],
    "type" : "object",
    "properties" : {
      "contextIdentifier" : {
        "required" : [
          "type",
          "value"
        ],
        "allOf" : [
          {
            "$ref" : "#/components/schemas/TestDataContextIdentifier"
          }
        ]
      },
      "authorizedIdentifier" : {
        "required" : [
          "type",
          "value"
        ],
        "allOf" : [
          {
            "$ref" : "#/components/schemas/TestDataAuthorizedIdentifier"
          }
        ]
      }
    },
    "additionalProperties" : false
  }


  "TestDataContextIdentifier" : {
    "required" : [
      "type",
      "value"
    ],
    "type" : "object",
    "properties" : {
      "type" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/TestDataContextIdentifierType"
          }
        ]
      },
      "value" : {
        "type" : "string"
      }
    },
    "additionalProperties" : false
  }


  "TestDataContextIdentifierType" : {
    "enum" : [
      "Nip"
    ],
    "type" : "string"
  }


  "TestDataAuthorizedIdentifier" : {
    "required" : [
      "type",
      "value"
    ],
    "type" : "object",
    "properties" : {
      "type" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/TestDataAuthorizedIdentifierType"
          }
        ]
      },
      "value" : {
        "type" : "string"
      }
    },
    "additionalProperties" : false
  }


  "TestDataAuthorizedIdentifierType" : {
    "enum" : [
      "Nip",
      "Pesel",
      "Fingerprint"
    ],
    "type" : "string"
  }



//---------------------------------------------------------------------------------------------------
request: "/api/v2/testdata/permissions/revoke": post: application/json
{
  "contextIdentifier": { // required; type: object; items: #/components/schemas/TestDataContextIdentifier;
    "type": "", // required; type: string; items: #/components/schemas/TestDataContextIdentifierType;
    "value": "" // required; type: string;
  },
  "authorizedIdentifier": { // required; type: object; items: #/components/schemas/TestDataAuthorizedIdentifier;
    "type": "", // required; type: string; items: #/components/schemas/TestDataAuthorizedIdentifierType;
    "value": "" // required; type: string;
  }
}



response (200):
